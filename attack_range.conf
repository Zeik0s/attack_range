# This file contains possible settings you can use to configure Attack Range

[global]
log_path = attack_range.log
# Sets the log_path for the logging file

log_level = INFO
# Sets the log level for the logging
# Possible values: INFO, ERROR


[range_settings]
key_name = attack-range-key-pair
# Specify the name of the EC2 key pair name
# This is only needed for modes: terraform and packer

ip_whitelist = 0.0.0.0/0
# Specify the IP whitelist for the aws instances
# This is only needed for modes: terraform and packer

private_key_path = ~/.ssh/id_rsa
# Specify the path to your private SSH key
# This is only needed for modes: terraform and packer

region = us-west-2
# Specify the aws region in which you want to build the attack range
# please ensure that aws_cli has the same region specified
# This is only needed for modes: terraform and packer


[splunk_settings]
splunk_admin_password = I-l1ke-Attack-Range!
# Specify the password for the admin user in Splunk
# It is recommended to change that value

splunk_url = https://download.splunk.com/products/splunk/releases/8.0.2/linux/splunk-8.0.2-a7f645ddaf91-Linux-x86_64.tgz
# Specify the download URL of Splunk Enterprise

splunk_binary = splunk-8.0.2-a7f645ddaf91-Linux-x86_64.tgz
# Specify the name of the Splunk Enterprise executable

s3_bucket_url = https://attack-range-appbinaries.s3-us-west-2.amazonaws.com
# Specify the S3 bucket url from which you want to download the Splunk Apps

splunk_windows_ta = splunk-add-on-for-microsoft-windows_700.tgz
# Specify the Splunk Windows TA

splunk_sysmon_ta = add-on-for-microsoft-sysmon_1030.tgz
# Specify the Splunk Sysmon TA

splunk_cim_app = splunk-common-information-model-cim_4150.tgz
# Specify the Splunk CIM App

splunk_escu_app = DA-ESS-ContentUpdate-latest.tar.gz
# Specify the Splunk ESCU App

splunk_asx_app = Splunk_ASX-latest.tar.gz
# Specify the Splunk ASX App

splunk_python_app = python-for-scientific-computing-for-linux-64-bit_200.tgz
# Specify the Splunk python for scientific computing dependency that is needed by the MLTK app

splunk_mltk_app = splunk-machine-learning-toolkit_510.tgz
# Specify the Splunk MLTK App

splunk_stream_app = splunk-stream_720.tgz
# Specify the Splunk Stream App

splunk_security_essentials_app = splunk-security-essentials_310.tgz
# Specify the Splunk SSE App

punchard_custom_visualization = punchcard-custom-visualization_140.tgz

status_indicator_custom_visualization = status-indicator-custom-visualization_140.tgz

splunk_attack_range_dashboard = splunk_attack_range_reporting.spl

timeline_custom_visualization = timeline-custom-visualization_140.tgz

splunk_aws_app = splunk-add-on-for-amazon-web-services_500.tgz
# Specify the Splunk AWS App
# Will be only installed when cloud_attack_range=1

splunk_bots_dataset = 0
# A comma separated list of values indicating which of the open-source Boss
# of the SOC (BOTS) datasets to install.
# 0  - Do not install any Boss of the SOC datasets (default)
# 1  - full BOTSv1 dataset index=botsv1
# 1a - attack-only BOTSv1 dataset index=botsv1 (recommended over full BOTSv1)
# 2  - full BOTSv2 dataset index=botsv2
# 2a - attack-only BOTSv2 dataset index=botsv2 (recommended over full BOTSv2)
# 3  - full BOTSv3 dataset index=botsv3 (there is no 'attack-only for BOTSv3)
#
# Examples:
#
#   splunk_bots_dataset = 1a
#   This setting works nicely with the 'Boss of the SOC (BOTS) Investigation
#   Workshop for Splunk'
#   https://splunkbase.splunk.com/app/3985/
#
#   splunk_bots_dataset = 1a,2a,3
#   This is the recommended setting to get the most BOTS data while incurring
#   least storage and download times
#
# For BOTSv1 and BOTSv2 the 'attack-only' versions of the datasets are
# preferable. They contain all the malicious activity with none of the
# bulky background noise. You cannot select both 1 and 1a, nor 2 and 2a.
# doing so will result in an error during Attack Range Build.
#
# Note that specifying any of these datasets will cause the Attack Range build
# process to download large files and store them in your Attack Range Splunk
# instance. Slow network links combined with some of the larger BOTS datasets
# will add significant time to your Attack Range build. A summary of the
# datasets and their sizes can be found here:
# https://github.com/splunk/securitydatasets
#
# Note the Attack Range build process does not currently install the Splunk
# apps and add-ons for the BOTS data. You may view the list of apps and
# add-ons that are associated with each dataset here:
# https://github.com/splunk/securitydatasets
#
# For more information please see: https://github.com/splunk/securitydatasets
#
# Questions or comments? Please email the BOTS team: bots@splunk.com
#

[phantom_settings]
phantom_community_username = user
# Specify the username needed to login to my.phantom.us to download Phantom
# This must be changed to a real username
# You can register under my.phantom.us

phantom_community_password = password
# Specify the password used to login to my.phantom.us to download Phantom
# This must be changed to a real password
# You can register under my.phantom.us

phantom_admin_password = I-l1ke-Attack-Range!
# Specify the password that will be used to login to the new Phantom instance as admin
# It is recommended that you change this value

phantom_app = phantom-app-for-splunk_305.tgz

[windows_settings]
win_username = Administrator
# Specify the Administrator user in your windows machine
# It is recommended to keep that value as it is

win_password = I-l1ke-Attack-Range!
# Specify the password for the Administrator User in Windows
# It is recommended to change that value
# The default windows password policy must be followed (at least three of uppercase letters, lowercase letters, numbers, and special characters)

splunk_uf_win_url = https://download.splunk.com/products/universalforwarder/releases/8.0.2/windows/splunkforwarder-8.0.2-a7f645ddaf91-x64-release.msi
# Specify the download URL of the Splunk windows universal forwarder

win_sysmon_url = https://attack-range-appbinaries.s3-us-west-2.amazonaws.com/Sysmon.zip
# Specify the download URL of sysmon

win_sysmon_template = AttackRangeSysmon.xml
# Specify the sysmon template
# Possible Values: SysmonConfig-moti.xml, SysmonConfig-Neo23x0-server.xml, SysmonConfig-Neo23x0-workstations.xml, SysmonConfig-TSwift.xml, SysmonConfig-Verbose.xml, SysmonConfigCustom.xml

[enterprise_security]
install_es = 0
# Specify whether install Splunk Enterprise Security or not.
# Splunk Enterprise Security is a Splunk Premium App, that's why it needs to be downloaded and stored into apps folder.
# After installing ES, Splunk is available under https://[ip]:8000
# possible values: 1, 0

splunk_es_app = splunk-enterprise-security_611.spl
# Spefify the name of the Splunk Enterprise Security file, which you saved into the apps folder.


[mltk]
install_mltk = 0
# Specify whether install Splunk MLTK or not.
# After installing MLTK, Splunk is available under https://[ip]:8000
# possible values: 1, 0


[attack_data]
capture_attack_data = 0


[automated_testing]
automated_testing = 0
# Specify if Attack Range should open issues for failed tests in your GitHub repository

github_repo = splunk/security-content
# Specify your GitHub repository

github_token =
# Specify our personal GitHub Access Token to create issues



[dsp]
install_dsp = 0
# specify whether enable DSP output in Splunk or not

dsp_client_cert_path =
# specify the certificate path for the DSP client. A certificate must be generated using the following instructions:
# https://docs.splunk.com/Documentation/DSP/1.1.0/Data/Forwarder#Configure_your_forwarder_to_use_the_client_certificate
# specifically the path to the generated my_forwarder-keys.pem

dsp_node =
# specify a comma delimited list of DSP nodes to forward data to.
# Please verify that your attack_range network can connect to port 30001

nxlog_url = https://nxlog.co/system/files/products/files/348/nxlog-ce-2.10.2150.msi
# url to download the nxlog application for collecting and sending event logs in json format

[mission_control]
install_mission_control = 0
# specify whether install Mission Control App in Splunk or not

mission_control_app = splunk-connect-for-mission-control-ubuntu-0.0.1181.tgz
# Spefify the name of the Mission Control App for Splunk, which you saved into the apps folder.


[demo]
run_demo = 0
# specify whether run a specific demo or not.

demo_scenario = mission_control_malicious_putty
# Specify the name of the demo you want to run.


[simulation]
art_run_techniques = T1003.001
# Specify the run technique of atomic_red_team
# You can specify this value either over the command line or in this configuration file. Command line is prioritized over configuration file.

art_repository = splunk
# Specify the Atomic Red Team repository fork, which you want to use.

art_branch = master
# Specify new branch of the Atomic Red Team repository, which you want to use.

caldera_password = I-l1ke-Attack-Range!
# specify the caldera password for the user: admin


[environment]
# specify your Attack Range environment by enabling (1) or disabling (0) machines

phantom_server = 0
# enable a phantom server
# possible values: 1, 0

windows_domain_controller = 1
# enable a windows domain controller
# possible values: 1, 0

windows_server = 0
# enable a windows server
# possible values: 1, 0

kali_machine = 0
# enable a kali linux machine
# possible values: 1, 0

windows_client = 0
# enable a windows client
# this is only possible for vagrant in the moment
# possible values: 1, 0


[splunk_server]
# customize the splunk server

splunk_server_private_ip = 10.0.1.12
# specify the splunk server's private ip
# for mode terraform should be in subnet: 10.0.1.0/24


[phantom_server]
# customize the phantom server

phantom_server_private_ip = 10.0.1.13
# specify the phantom server's private ip
# for mode terraform should be in subnet: 10.0.1.0/24

[windows_domain_controller]
# customize the windows domain controller

windows_domain_controller_private_ip = 10.0.1.14
# specify the windows domain controller's private ip
# for mode terraform should be in subnet: 10.0.1.0/24

windows_domain_controller_os = Windows_Server-2016-English-Full-Base-*
# specify the windows domain controller operating System
# Currently only Windows_Server_2016 is supported


[windows_server]
# customize the windows server

windows_server_private_ip = 10.0.1.15
# specify the windows server private ip
# for mode terraform should be in subnet: 10.0.1.0/24

windows_server_os = Windows_Server-2016-English-Full-Base-*
# specify the windows server operating System
# Currently only Windows_Server_2016 is supported

windows_server_join_domain = 1
# specify if the windows server should join the windows domain
# possible values: 1, 0


[kali_machine]
# customize the kali machine

kali_machine_private_ip = 10.0.1.16
# specify the kali machine private ip
# for mode terraform should be in subnet: 10.0.1.0/24


[windows_client]
# customize the windows client

windows_client_private_ip = 10.0.1.17
# specify the windows client private ip
# for mode terraform should be in subnet: 10.0.1.0/24

windows_client_os = import-ami-0e5a092cc20dbb992
# specify the windows server operating System
# for mode Vagrant use Windows-10
# for mode terraform specify the ami name
# instructions to upload your own Windows 10 ami can be found in the wiki

windows_client_join_domain = 1
# specify if the windows client should join the windows domain
# possible values: 1, 0


[cloud]
cloud_attack_range = 0
# specify if you want to build a serverless infrastructure or not

cloud_s3_bucket =
# specify the bucket for the application for Lambda
# you need to create your own bucket for that in the same region in which you want to deploy attack range

cloud_s3_bucket_key = backend.zip
# specify the name of the packaged application for Lambda
# you can download the backend.zip from https://attack-range-appbinaries.s3-us-west-2.amazonaws.com/backend.zip

cloudtrail = 0
# specify if you want to enable CloudTrail logging or not

cloudtrail_bucket =
# specify the bucket to store your CloudTrail logs
# you need to create your own bucket for that in the same region in which you want to deploy attack range


[kubernetes]
kubernetes = 0
# specify if you want to build a kubernetes cluster or not

app = wordpress
# specify the app which you want to deploy to the kubernetes cluster
# helm is used to deploy the app

repo_name = bitnami
# specify the apps repository
# helm is used to deploy the app

repo_url = https://charts.bitnami.com/bitnami
# specify the url of the repository
# helm is used to deploy the app
