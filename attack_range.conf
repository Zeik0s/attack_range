# This file contains possible settings you can use to configure Attack Range

[global]
log_path = attack_range.log
# Sets the log_path for the logging file

log_level = INFO
# Sets the log level for the logging
# Possible values: INFO, ERROR


[range_settings]
key_name = attack-range-key-pair
# Specify the name of the EC2 key pair name
# This is only needed for modes: terraform and packer

ip_whitelist = 0.0.0.0/0
# Specify the IP whitelist for the aws instances
# This is only needed for modes: terraform and packer

private_key_path = ~/.ssh/id_rsa
# Specify the path to your private SSH key
# This is only needed for modes: terraform and packer

region = us-west-2
# Specify the aws region in which you want to build the attack range
# please ensure that aws_cli has the same region specified
# This is only needed for modes: terraform and packer

availability_zone = us-west-2a
# Specify the availability_zone
# The availability_zone needs to fit to your region
# This is only needed for modes: terraform and packer

subnet_cidr = 10.0.0.0/16
# Specify the subnet in which the EC2 instances are created
# The subnet needs to fit to the private IP addresses of the machines
# This is only needed for modes: terraform and packer


[splunk_settings]
splunk_admin_password = I-l1ke-Attack-Range!
# Specify the password for the admin user in Splunk
# It is recommended to change that value

splunk_url = https://www.splunk.com/page/download_track?file=7.3.2/linux/splunk-7.3.2-c60db69f8e32-Linux-x86_64.tgz&ac=&wget=true&name=wget&platform=Linux&architecture=x86_64&version=7.3.2&product=splunk&typed=release
# Specify the download URL of Splunk Enterprise

splunk_binary = splunk-7.3.2-c60db69f8e32-Linux-x86_64.tgz
# Specify the name of the Splunk Enterprise executable

s3_bucket_url = https://attack-range-appbinaries.s3-us-west-2.amazonaws.com
# Specify the S3 bucket url from which you want to download the Splunk Apps

splunk_windows_ta = splunk-add-on-for-microsoft-windows_700.tgz
# Specify the Splunk Windows TA

splunk_sysmon_ta = add-on-for-microsoft-sysmon_810.tgz
# Specify the Splunk Sysmon TA

splunk_cim_app = splunk-common-information-model-cim_4130.tgz
# Specify the Splunk CIM App

splunk_escu_app = DA-ESS-ContentUpdate-latest.tar.gz
# Specify the Splunk ESCU App

splunk_asx_app = Splunk_Analytic_Story_Execution-latest.tar.gz
# Specify the Splunk ASX App

splunk_python_app = python-for-scientific-computing-for-linux-64-bit_14.tgz
# Specify the Splunk python for scientific computing dependency that is needed by the MLTK app

splunk_mltk_app = splunk-machine-learning-toolkit_450.tgz
# Specify the Splunk MLTK App

[windows_settings]
win_username = Administrator
# Specify the Administrator user in your windows machine
# It is recommended to keep that value as it is

win_password = I-l1ke-Attack-Range!
# Specify the password for the Administrator User in Windows
# It is recommended to change that value

splunk_uf_win_url = https://www.splunk.com/page/download_track?file=7.3.2/windows/splunkforwarder-7.3.2-c60db69f8e32-x64-release.msi&ac=&wget=true&name=wget&platform=Windows&architecture=x86_64&version=7.3.2&product=universalforwarder&typed=release
# Specify the download URL of the Splunk windows universal forwarder

win_sysmon_url = https://download.sysinternals.com/files/Sysmon.zip
# Specify the download URL of sysmon

win_sysmon_template = SysmonConfig-TSwift.xml
# Specify the sysmon template
# Possible Values: SysmonConfig-moti.xml, SysmonConfig-Neo23x0-server.xml, SysmonConfig-Neo23x0-workstations.xml, SysmonConfig-TSwift.xml, SysmonConfig-Verbose.xml, SysmonConfigCustom.xml

[enterprise_security]
install_es = 0
# Specify whether install Splunk Enterprise Security or not.
# Splunk Enterprise Security is a Splunk Premium App, that's why it needs to be downloaded and stored into apps folder.
# After installing ES, Splunk is available under https://[ip]:8000
# possible values: 1, 0

splunk_es_app = splunk-enterprise-security_531.spl
# Spefify the name of the Splunk Enterprise Security file, which you saved into the apps folder.

[simulation]
art_run_techniques = T1003
# Specify the run technique of atomic_red_team
# You can specify this value either over the command line or in this configuration file. Command line is prioritized over configuration file.

caldera_password = I-l1ke-Attack-Range!
# specify the caldera password for the user: admin


[environment]
# specify your Attack Range environment by enable (1) or disable (0) machines

windows_domain_controller = 1
# enable a windows domain controller
# possible values: 1, 0

windows_server = 0
# enable a windows server
# possible values: 1, 0

kali_machine = 0
# enable a kali linux machine
# possible values: 1, 0

windows_client = 0
# enable a windows client
# this is only possible for vagrant in the moment
# possible values: 1, 0


[splunk_server]
# customize the splunk server

splunk_server_private_ip = 10.0.1.5
# specify the splunk servers private ip


[windows_domain_controller]
# customize the windows domain controller

windows_domain_controller_private_ip = 10.0.1.6
# specify the windows domain controller private ip

windows_domain_controller_os = Windows_Server_2016
# specify the windows domain controller operating System
# Currently only Windows_Server_2016 is supported


[windows_server]
# customize the windows server

windows_server_private_ip = 10.0.1.7
# specify the windows server private ip

windows_server_os = Windows_Server_2016
# specify the windows server operating System
# Currently only Windows_Server_2016 is supported

windows_server_join_domain = 1
# specify if the windows server should join the windows domain
# possible values: 1, 0


[kali_machine]
# customize the kali machine

kali_machine_private_ip = 10.0.1.8
# specify the kali machine private ip


[windows_client]
# customize the windows client

windows_client_private_ip = 10.0.1.9
# specify the windows client private ip

windows_client_os = import-ami-0e5a092cc20dbb992
# specify the windows server operating System
# for mode Vagrant use Windows-10
# for mode terraform specify the ami name
# instructions to upload your own Windows 10 ami can be found in the wiki

windows_client_join_domain = 1
# specify if the windows client should join the windows domain
# possible values: 1, 0
